'''
[ 문제 ] : 곱하기 혹은 더하기
각 자리가 숫자(0부터 9)로만 이루어진 문자열 S가 주어졌을 때, 왼쪽부터 오른쪽으로 하나씩 모든 숫자를 확인하며
숫자 사이에 x 혹은 + 연산자를 넣어 결과적으로 만들어질 수 있는 가장 큰 수를 구하는 프로그램을 작성하시고.
단, + 보다 x를 먼저 계산하는 일반적인 방식과 달리, 모든 연산은 왼쪽에서부터 순서대로 이루어진다고 가정합니다.

1. N에서 1을 뺀다.
2. N을 K로 나눈다.

1번 혹은 2번의 과정을 수행해야 하는 최소 횟수를 구해라

[ 예시 ]
1) 입력 조건
- 첫째 줄에 여러 개의 숫자로 구성된 하나의 문자열 S가 주어집니다.(1<=S의 길이<=20)

2) 출력 조건
- 첫째 줄에 만들어질 수 있는 가장 큰 수를 출력합니다.

3) 입력 예시
02984

4) 출력 예시
576

[ 문제 접근 방식 ]
1) 0의 경우에는 어떤 수를 곱해도 결과가 0이 됨으로, 0의 경우에는 모두 더하기 연산을 한다.
2) 1의 경우에는 어떤수든 곱할 때보다 더할 때가 더 큰 수가 나옴으로, 1의 경우에는 모두 더하기 연산을 한다.
3) 2~9의 경우에는 앞서 수행한 계산값이 0또는 1일 경우엔 곱할 때보다 더할 때 더 큰수가 나온다.
4) 2~9의 경우에는 앞서 수행한 계산값이 0또는 1이 아닌 경우에는 모두 곱하기 연산을 한다.
5) 정리하자면 계산하려는 값이 0 또는 1이거나 앞서 수행한 계산값이 1이하일 경우에는 더하기 연산을 수행하고,
   이외의 경우에는 곱하기 연산을 수행한다.

[ 시간복잡도 ]
O(N)
'''

S = input()

result = 0
for i in S:
    if int(i) <= 1 or result <= 1:
        result += int(i)
    else:
        result *= int(i)

print(result)