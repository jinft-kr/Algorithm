'''
[ 문제 ] : 문자열 뒤집기 (https://www.acmicpc.net/problem/1439)
다솜이는 0과 1로만 이루어진 문자열 S를 가지고 있다. 다솜이는 이 문자열 S에 있는 모든 숫자를 전부 같게 만들려고 한다. 다솜이가 할 수 있는 행동은 S에서 연속된 하나 이상의 숫자를 잡고 모두 뒤집는 것이다. 뒤집는 것은 1을 0으로, 0을 1로 바꾸는 것을 의미한다.

예를 들어 S=0001100 일 때,

전체를 뒤집으면 1110011이 된다.
4번째 문자부터 5번째 문자까지 뒤집으면 1111111이 되어서 2번 만에 모두 같은 숫자로 만들 수 있다.
하지만, 처음부터 4번째 문자부터 5번째 문자까지 문자를 뒤집으면 한 번에 0000000이 되어서 1번 만에 모두 같은 숫자로 만들 수 있다.

문자열 S가 주어졌을 때, 다솜이가 해야하는 행동의 최소 횟수를 출력하시오.

[ 예시 ]
1) 입력 조건
첫째 줄에 문자열 S가 주어진다. S의 길이는 100만보다 작다.

2) 출력 조건
첫째 줄에 다솜이가 해야하는 행동의 최소 횟수를 출력한다.

3) 입력 예시
0001100

4) 출력 예시
1

[ 문제 접근 방식 ]
1) 연속된 숫자 1, 0이 있는 경우를 구하고, 숫자 1개만 있는 1, 0의 개수를 구한다.
2) 연속된 숫자 1 또는 0으로만 끝나는 문자열의 경우에는 뒤집지 않는다.
3) 연속된 숫자만 존재하는 경우 연속된 숫자 1, 0이 있는 경우 중 작은 숫자를 뒤집는다.
연속된 숫자 1과 숫자 1개만 있는 1이 있는 개수와, 연속된 숫자 0과 숫자 1개만 있는 0의 개수를 더해서 적은 수의 숫자를 뒤집는다.
-> 1->0 으로 0->1로 변환되는 횟수를 구해서 두 경우 중 작은 수가 최소한의 수가 된다.
-> 따라서 1 -> 0으로 바뀌는 횟수와, 0 -> 1로 바뀌는 횟수를 구한다.
        구한 두 수 중에 작은 숫자가 최소 횟수이다.

[ 시간복잡도 ]
O(N)

'''

S = input()

one = 0
zero = 0

for i in range(len(S)-1):
    if S[i] != S[i+1]:
        if S[i+1] == '1':
            one += 1
        else:
            zero += 1

result = min(one, zero)
print(result)






