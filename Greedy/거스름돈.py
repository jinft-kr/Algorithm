'''
[ 문제 ] : 3-1 거스름돈
당신은 음식점의 계산을 도와주는 점원이다. 카운터에는 거스름돈으로 사용할 500원, 100원, 50원, 10원짜리 동전이 무한히 존재한다고 가정한다.
손님에게 거슬러 줘야 할 돈이 N원일 때 거슬러줘야 할 동전의 최소 개수를 구하라.
단, 거슬러 줘야할 돈 N은 항상 10의 배수이다.

[ 예시 ]
N = 1260, 최소 개수 = 6

[ 문제 접근 방식 ]
조건 1) N원일 때 거스름돈으로 줄 수 있는 500원, 100원, 50원, 10원으로 거슬러줄 수 있는 최소 개수
-> 최소 동전을 주기 위해선 줄 수 있는 가장 큰 돈부터 거슬러 주면 된다. 계산하는 돈이 0원이 되면 로직 종료.
조건 2) 거슬러 줘야할 돈 N은 항상 10의 배수
-> 500원, 100원, 50원, 10원은 모두 10의 배수임으로 고려하지 않아도 됨.

[ 시간복잡도 ]
T(n) = n + 6 -> O(n)
'''

n = 1260                    # 1 => O(1)
count = 0                   # 2 => O(1)
money = [500, 100, 50, 10]  # 3 => O(1)
for tmp in money:           # n + 3 => O(n)
    if n == 0 :             # n + 4 => O(n)
        break
    else:                   # n + 6 => O(n)
        count += n // tmp
        n = n % tmp

print(count)