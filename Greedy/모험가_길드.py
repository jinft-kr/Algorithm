'''
[ 문제 ] : 모험가 길드
N 명의 모험가에 대한 정보가 주어졌을 때, 여행을 떠날 수 있는 그룹 수의 최대값을 구하세요.
공포도가 X인 모험가는 반드시 X명 이상으로 구성한 모험가 그룹에 참여해야 여행을 떠날 수 있습니다.

[ 예시 ]
1) 입력 조건
- 첫째 줄에 모험가의 수 N이 주어집니다. (1<=N<=100000)
- 둘째 줄에 각 모험가의 공포도의 값을 N 이하의 자연수로 주어지며, 각 자연수는 공백으로 구분합니다.

2) 출력 조건
- 여행을 떠날 수 있는 그룹 수의 최댓값을 출력합니다.

3) 입력 예시
5
2 3 1 2 2

4) 출력 예시
2

[ 문제 접근 방식 ]
1) 공포수가 낮은 순으로 정렬한다.
2) 앞에 있는 공포수를 기준으로 멤버를 모아 그룹을 결성한다.
3) 그룹이 결성되고 남은 멤버가 있을 경우,
공포순이 낮은 순으로 정렬한 멤버에서 그룹이 결성되지 않은 멤버중 첫번째 멤버를 기준으로 다시 반복한다.

[ 시간복잡도 ]
O(N)

'''
# 입력 받은 모험가의 수 (N)
N = input()
# 입력 받은 모험가의 공포도
member = list(map(int, input().split()))

# 모험가의 공포도를 낮은 순으로 정렬
member.sort()

# 총 그룹의 수
group = 0
# 현재 그룹에 포함된 모험가의 수
count = 0

# 공포도를 낮은 것부터 하나씩 멤버에 포함 시키기
for i in member:
    # 현재 그룹에 해당 모험가를 포함시키기
    count += 1
    # 현재 그룹에 포함된 모험가의 수가 현재의 공포도 이상이라면, 그룹 결성
    if count >= i:
        # 총 그룹의 수 증가시키기
        group += 1
        # 현재 그룹에 포함된 모험가의 수 초기화
        count = 0

# 총 그룹의 수 출력
print(group)
